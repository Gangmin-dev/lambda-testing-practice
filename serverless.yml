service: cognito-s3-lambda-practice

frameworkVersion: '2'

custom:
  env: ${file(./env/${opt:stage, 'local'}.json)}

provider:
  name: aws
  region: ap-northeast-2
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  environment:
    NODE_PATH: "./:/opt/node_modules"
    DB_HOST: ${self:custom.env.DB_HOST}
    DB_PORT: ${self:custom.env.DB_PORT}
    DB_USER: ${self:custom.env.DB_USER}
    DB_PASSWORD: ${self:custom.env.DB_PASSWORD}
    DB_NAME: ${self:custom.env.DB_NAME}

package:
  individually: true
  path: target/${opt:stage, 'local'}
  exclude:
    - ./**

functions:
  getParts:
    handler: src/getParts.handler
    package:
      patterns:
        - src/getParts.js
        - node_modules/serverless-mysql/**
        - node_modules/mysql2/**
    events:
      - http:
          path: /parts
          method: GET
          cors: true
        
  cognitoPostConfirm:
    handler: cognitoPostConfirm.handler
    package:
      patterns:
        - 'cognitoPostConfirm.js'
    events:
      - cognitoUserPool:
          pool: ap-northeast-2_2VMRFBVwT
          trigger: PostConfirmation
          existing: true

plugins:
  - serverless-offline
